{"ast":null,"code":"'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\nvar cache = {\n  __proto__: null\n};\nif (hasToStringTag && gOPD && getPrototypeOf) {\n  forEach(typedArrays, function (typedArray) {\n    var arr = new g[typedArray]();\n    if (Symbol.toStringTag in arr) {\n      var proto = getPrototypeOf(arr);\n      var descriptor = gOPD(proto, Symbol.toStringTag);\n      if (!descriptor) {\n        var superProto = getPrototypeOf(proto);\n        descriptor = gOPD(superProto, Symbol.toStringTag);\n      }\n      cache['$' + typedArray] = callBind(descriptor.get);\n    }\n  });\n} else {\n  forEach(typedArrays, function (typedArray) {\n    var arr = new g[typedArray]();\n    cache['$' + typedArray] = callBind(arr.slice);\n  });\n}\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n  var found = false;\n  forEach(cache, function (getter, typedArray) {\n    if (!found) {\n      try {\n        if ('$' + getter(value) === typedArray) {\n          found = $slice(typedArray, 1);\n        }\n      } catch (e) {/**/}\n    }\n  });\n  return found;\n};\nvar trySlices = function tryAllSlices(value) {\n  var found = false;\n  forEach(cache, function (getter, name) {\n    if (!found) {\n      try {\n        getter(value);\n        found = $slice(name, 1);\n      } catch (e) {/**/}\n    }\n  });\n  return found;\n};\nmodule.exports = function whichTypedArray(value) {\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n  if (!hasToStringTag) {\n    var tag = $slice($toString(value), 8, -1);\n    if ($indexOf(typedArrays, tag) > -1) {\n      return tag;\n    }\n    if (tag !== 'Object') {\n      return false;\n    }\n    // node < 0.6 hits here on real Typed Arrays\n    return trySlices(value);\n  }\n  if (!gOPD) {\n    return null;\n  } // unknown engine\n  return tryTypedArrays(value);\n};","map":{"version":3,"names":["forEach","require","availableTypedArrays","callBind","callBound","gOPD","$toString","hasToStringTag","g","globalThis","global","typedArrays","$slice","getPrototypeOf","Object","$indexOf","indexOf","array","value","i","length","cache","__proto__","typedArray","arr","Symbol","toStringTag","proto","descriptor","superProto","get","slice","tryTypedArrays","tryAllTypedArrays","found","getter","e","trySlices","tryAllSlices","name","module","exports","whichTypedArray","tag"],"sources":["C:/Users/trann/.vscode/BetterDay-Tool/frontend/node_modules/which-typed-array/index.js"],"sourcesContent":["'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tcache['$' + typedArray] = callBind(arr.slice);\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar found = false;\n\tforEach(cache, function (getter, typedArray) {\n\t\tif (!found) {\n\t\t\ttry {\n\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t}\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn found;\n};\n\nvar trySlices = function tryAllSlices(value) {\n\tvar found = false;\n\tforEach(cache, function (getter, name) {\n\t\tif (!found) {\n\t\t\ttry {\n\t\t\t\tgetter(value);\n\t\t\t\tfound = $slice(name, 1);\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn found;\n};\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}